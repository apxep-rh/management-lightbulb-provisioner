- name: Generate users list
  hosts: localhost
  connection: local
  become: no
  gather_facts: no
  vars_files:
    - template-nodes-per-pod-ec2.yml
  tasks:
    - name: generate users list
      set_fact:
        users: "{{ users|default([]) + [ {'name': 'student' + item, 'username': 'student' + item, 'email': 'student' + item + '@example.com'} ] }}"
      with_sequence: start="{{ student_count_start }}" end="{{ student_count_end }}"
      when: student_count_start is defined and student_count_end is defined

    - name: initialize nodes variable
      set_fact:
        nodes: []

    - name: generate nodes list
      set_fact:
        nodes: "{{ nodes }} + {{ template_nodes }}"
      with_nested:
        - "{{ users }}"

    - debug:
        var: nodes

- name: provision ec2 instances
  hosts: localhost
  become: no
  #vars_files:
  #  - nodes-ec2.yml
  roles:
    - ansible-role-ec2

- name: add hosts to groups
  hosts: localhost
  become: no
  roles:
    - create-runtime-inventory

- name: provision tower
  hosts: tag_role_tower:&tag_app_management_lightbulb
  become: yes
  remote_user: ec2-user
  become_method: sudo
  gather_facts: true
  vars_files:
    - "group_vars/all/vars"
    - "group_vars/all/vault"
  roles:
    - provision-ansible-tower
    - tower-add-content

- name: provision cfme
  hosts: tag_role_cfme:&tag_app_management_lightbulb
  become: yes
  remote_user: ec2-user
  become_method: sudo
  gather_facts: true
  vars_files:
    - "group_vars/all/vars"
    - "group_vars/all/vault"
  roles:
    - provision-cfme
    - cfme-add-provider-ec2
    - cfme-add-provider-tower