- name: provision ec2 instances
  hosts: localhost
  become: no
  vars_files:
    - nodes-ec2.yml
  roles:
    - ansible-role-ec2

- name: add hosts to groups
  hosts: localhost
  become: no
  tasks:
    - debug:
        msg: "{{ instances.results }}"

    - name: add cfme hosts to groups
      add_host:
        name: "{{ item.tagged_instances[0].public_ip }}"
        ansible_host: "{{ item.tagged_instances[0].public_ip }}"
        groups: tag_role_cfme,tag_app_management_lightbulb
      with_items: "{{ instances.results }}"
      when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('cfme' in item.invocation.module_args.instance_tags.role)
      changed_when: no
      tags:
        - addhost

    - name: add tower hosts to groups
      add_host:
        name: "{{ item.tagged_instances[0].public_ip }}"
        ansible_host: "{{ item.tagged_instances[0].public_ip }}"
        groups: tag_role_tower,tag_app_management_lightbulb
      with_items: "{{ instances.results }}"
      when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('tower' in item.invocation.module_args.instance_tags.role)
      changed_when: no
      tags:
        - addhost

    - name: add hosts to pod groups
      add_host:
        name: "{{ item.tagged_instances[0].public_ip }}"
        ansible_host: "{{ item.tagged_instances[0].public_ip }}"
        groups: "tag_pod_{{ item.invocation.module_args.instance_tags.pod }}"
      with_items: "{{ instances.results }}"
      when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and (item.invocation.module_args.instance_tags.pod is defined)
      changed_when: no
      tags:
        - addhost

    - name: Set facts on instances
      set_fact:
        ec2_tag_pod: "{{ item.invocation.module_args.instance_tags.pod }}"
        ec2_tag_app: "{{ item.invocation.module_args.instance_tags.app }}"
        ec2_tag_role: "{{ item.invocation.module_args.instance_tags.role }}"
        ec2_ip_address: "{{ item.tagged_instances[0].public_ip }}"
        ec2_private_ip_address: "{{ item.tagged_instances[0].private_ip }}"
        ec2_private_dns_name: "{{ item.tagged_instances[0].private_dns_name }}"
      with_items: "{{ instances.results }}"
      delegate_to: "{{ item.tagged_instances[0].public_ip }}"
      delegate_facts: yes

- name: provision tower
  hosts: tag_role_tower:&tag_app_management_lightbulb
  become: yes
  remote_user: ec2-user
  become_method: sudo
  gather_facts: true
  vars_files:
    - "group_vars/all/vars"
    - "group_vars/all/vault"
  roles:
    - provision-ansible-tower
    - tower-add-content

- name: provision cfme
  hosts: tag_role_cfme:&tag_app_management_lightbulb
  become: yes
  remote_user: ec2-user
  become_method: sudo
  gather_facts: true
  vars_files:
    - "group_vars/all/vars"
    - "group_vars/all/vault"
  roles:
    - provision-cfme
    - cfme-add-provider-ec2
    - cfme-add-provider-tower